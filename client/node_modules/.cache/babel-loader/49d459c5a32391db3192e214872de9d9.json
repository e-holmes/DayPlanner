{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\bethh\\\\OneDrive\\\\Documents\\\\DayPlanner\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\bethh\\\\OneDrive\\\\Documents\\\\DayPlanner\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\bethh\\\\OneDrive\\\\Documents\\\\DayPlanner\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\bethh\\\\OneDrive\\\\Documents\\\\DayPlanner\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\bethh\\\\OneDrive\\\\Documents\\\\DayPlanner\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\bethh\\\\OneDrive\\\\Documents\\\\DayPlanner\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\bethh\\\\OneDrive\\\\Documents\\\\DayPlanner\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"../src/components/Navbar\";\nimport Display from \"./pages/display\";\nimport Login from \"./pages/login\";\nimport API from \"./utils/API\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showLogin: true,\n      hideLogoutButton: true,\n      loginName: \"\",\n      loginPass: \"\",\n      isLoggedIn: false\n    };\n\n    _this.handleLogout = function (event) {\n      event.preventDefault();\n      localStorage.removeItem(\"id\");\n      localStorage.removeItem(\"isLoggedIn\");\n      window.location.href = \"/\";\n    };\n\n    _this.handleLogin = function (event) {\n      // Preventing the default behavior of the form submit (which is to refresh the page)\n      event.preventDefault();\n\n      if (_this.state.loginName && _this.state.loginPass) {\n        API.login({\n          userName: _this.state.loginName,\n          password: _this.state.loginPass\n        }).then(function (response) {\n          if (response.data.found === false) {\n            console.log(\"User not found.\");\n          } else if (response.data.userID === -1) {\n            console.log(\"Password is incorrect\");\n          } else {\n            localStorage.setItem(\"id\", response.data.userID);\n            localStorage.setItem(\"isLoggedIn\", true);\n            window.location.href = \"/main\";\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        }); // Alert the user their first and last name, clear `this.state.firstName` and `this.state.lastName`, clearing the inputs\n      }\n    };\n\n    _this.handleInputChange = function (event) {\n      // Getting the value and name of the input which triggered the change\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value; // Updating the input's state\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //grabbing the current route\n      var currentRoute = window.location.href.split(\"/\");\n      currentRoute = currentRoute[currentRoute.length - 1]; //make sure that if we're logged in state is correct and we're on the correct route\n\n      if (localStorage.getItem(\"isLoggedIn\")) {\n        this.setState({\n          hideLogoutButton: false,\n          showLogin: false\n        });\n\n        if (currentRoute === \"\") {\n          window.location.href = \"/main\";\n        }\n      } else if (currentRoute === \"main\") {\n        window.location.href = \"/\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        title: \"Day Planner\",\n        image: logo,\n        buttonName: \"Login\",\n        buttonNameTwo: \"Logout\",\n        onClick: this.handleLogin,\n        showLogin: this.state.showLogin,\n        hideLogoutButton: this.state.hideLogoutButton,\n        onClickLogout: this.handleLogout,\n        loginNameValue: this.state.loginName,\n        handleInputChange: this.handleInputChange,\n        passwordValue: this.state.passwordValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/main\",\n        component: Display,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/bethh/OneDrive/Documents/DayPlanner/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Navbar","Display","Login","API","App","state","showLogin","hideLogoutButton","loginName","loginPass","isLoggedIn","handleLogout","event","preventDefault","localStorage","removeItem","window","location","href","handleLogin","login","userName","password","then","response","data","found","console","log","userID","setItem","catch","err","handleInputChange","target","name","value","setState","currentRoute","split","length","getItem","logo","passwordValue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"../src/components/Navbar\";\nimport Display from \"./pages/display\"\nimport Login from \"./pages/login\";\nimport API from \"./utils/API\";\n\n\nclass App extends Component {\n\n  state = {\n    showLogin: true,\n    hideLogoutButton: true,\n    loginName: \"\",\n    loginPass: \"\",\n    isLoggedIn: false\n  }\n\n  componentDidMount() {\n\n    //grabbing the current route\n    var currentRoute = window.location.href.split(\"/\");\n    currentRoute = currentRoute[currentRoute.length-1]\n\n\n    //make sure that if we're logged in state is correct and we're on the correct route\n    if (localStorage.getItem(\"isLoggedIn\")) {\n      this.setState({ hideLogoutButton: false, showLogin: false });\n\n      if (currentRoute === \"\"){\n        window.location.href= \"/main\";\n      }\n\n    } else if (currentRoute === \"main\"){\n      window.location.href= \"/\";\n    }\n\n  }\n\n  handleLogout = (event) => {\n    event.preventDefault();\n    localStorage.removeItem(\"id\");\n    localStorage.removeItem(\"isLoggedIn\");\n    window.location.href = \"/\";\n  }\n\n  handleLogin = event => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    event.preventDefault();\n\n    if (this.state.loginName && this.state.loginPass) {\n      \n        API.login({\n            userName: this.state.loginName,\n            password: this.state.loginPass,\n  \n        }).then( function(response) {\n  \n          if (response.data.found === false){\n            console.log(\"User not found.\")\n          } else if (response.data.userID === -1){\n            console.log(\"Password is incorrect\");\n          } else {\n             localStorage.setItem(\"id\", response.data.userID);\n             localStorage.setItem(\"isLoggedIn\", true);\n             window.location.href = \"/main\";         \n          }\n        })\n            .catch(err => console.log(err));  \n  \n        // Alert the user their first and last name, clear `this.state.firstName` and `this.state.lastName`, clearing the inputs\n    }\n  };\n  \n  handleInputChange = event => {\n    // Getting the value and name of the input which triggered the change\n    const { name, value } = event.target;\n    // Updating the input's state\n    this.setState({\n        [name]: value\n    });\n  \n\n  };\n\n  render() {\n    return (\n      <Router>\n        <Navbar\n          title=\"Day Planner\"\n          image={logo}\n          buttonName=\"Login\"\n          buttonNameTwo=\"Logout\"\n          onClick={this.handleLogin}\n          showLogin={this.state.showLogin}\n          hideLogoutButton={this.state.hideLogoutButton}\n          onClickLogout={this.handleLogout}\n          loginNameValue={this.state.loginName}\n          handleInputChange={this.handleInputChange}\n          passwordValue = {this.state.passwordValue}\n        ></Navbar>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/main\" component={Display} />\n\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}